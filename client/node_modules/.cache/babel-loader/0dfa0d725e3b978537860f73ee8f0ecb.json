{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nexport const fetchBlogArticles = createAsyncThunk('home/fetchArticles', async () => {\n  const req = await fetch('/blogs', {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content_Type': 'application/json'\n    }\n  });\n  return await req.json();\n});\nexport const currencySlice = createSlice({\n  name: 'currency',\n  initialState: {\n    state: 'loading',\n    error: null,\n    currency: []\n  },\n  reducers: {\n    hydrateCurrency: (state, action) => {\n      state.currency = action.payload;\n    }\n  }\n});\nexport const getHomeCurrency = state => state.currency.currency;\nexport const {\n  hydrateCurrency\n} = currencySlice.actions;\nexport default currencySlice.reducer;","map":{"version":3,"sources":["C:/Users/Dylan/Desktop/SAE/2eme/nodejs/cryptocheck/client/src/pages/currencySlice.js"],"names":["createSlice","createAsyncThunk","fetchBlogArticles","req","fetch","method","headers","json","currencySlice","name","initialState","state","error","currency","reducers","hydrateCurrency","action","payload","getHomeCurrency","actions","reducer"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,gBAArB,QAA4C,kBAA5C;AAEA,OAAO,MAAMC,iBAAiB,GAAGD,gBAAgB,CAChD,oBADgD,EAEhD,YAAY;AACX,QAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,QAAD,EAAW;AACjCC,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACR,gBAAU,kBADF;AAER,sBAAgB;AAFR;AAFwB,GAAX,CAAvB;AAOA,SAAO,MAAMH,GAAG,CAACI,IAAJ,EAAb;AACA,CAX+C,CAA1C;AAcP,OAAO,MAAMC,aAAa,GAAGR,WAAW,CAAC;AACxCS,EAAAA,IAAI,EAAE,UADkC;AAExCC,EAAAA,YAAY,EAAE;AACbC,IAAAA,KAAK,EAAE,SADM;AAEbC,IAAAA,KAAK,EAAE,IAFM;AAGbC,IAAAA,QAAQ,EAAE;AAHG,GAF0B;AAOxCC,EAAAA,QAAQ,EAAE;AACTC,IAAAA,eAAe,EAAE,CAACJ,KAAD,EAAQK,MAAR,KAAmB;AACnCL,MAAAA,KAAK,CAACE,QAAN,GAAiBG,MAAM,CAACC,OAAxB;AACA;AAHQ;AAP8B,CAAD,CAAjC;AAeP,OAAO,MAAMC,eAAe,GAAGP,KAAK,IAAIA,KAAK,CAACE,QAAN,CAAeA,QAAhD;AAEP,OAAO,MAAM;AAACE,EAAAA;AAAD,IAAoBP,aAAa,CAACW,OAAxC;AAEP,eAAeX,aAAa,CAACY,OAA7B","sourcesContent":["import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\r\n\r\nexport const fetchBlogArticles = createAsyncThunk(\r\n\t'home/fetchArticles',\r\n\tasync () => {\r\n\t\tconst req = await fetch('/blogs', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Accept': 'application/json',\r\n\t\t\t\t'Content_Type': 'application/json'\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn await req.json();\r\n\t}\r\n);\r\n\r\nexport const currencySlice = createSlice({\r\n\tname: 'currency',\r\n\tinitialState: {\r\n\t\tstate: 'loading',\r\n\t\terror: null,\r\n\t\tcurrency: []\r\n\t},\r\n\treducers: {\r\n\t\thydrateCurrency: (state, action) => {\r\n\t\t\tstate.currency = action.payload\r\n\t\t},\r\n\t}\r\n});\r\n\r\n\r\nexport const getHomeCurrency = state => state.currency.currency;\r\n\r\nexport const {hydrateCurrency} = currencySlice.actions;\r\n\r\nexport default currencySlice.reducer;\r\n\r\n"]},"metadata":{},"sourceType":"module"}