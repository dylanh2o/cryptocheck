{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nvar dataAssets5 = [];\nexport const fetchInfoCurrency = createAsyncThunk('home/fetchInfoCurrency', async () => {\n  //recuperer toutes les info des crypto\n  const request = await fetch('https://rest.coinapi.io/v1/assets', {\n    method: 'GET',\n    headers: {\n      'X-CoinAPI-Key': 'F9065291-99B7-44B7-9F3C-4C02D0131B28'\n    }\n  });\n  const data = await request.json();\n\n  for (var i = 0; i < data.length; i++) {\n    if (data[i].asset_id === 'BTC' || data[i].asset_id === 'ETH' || data[i].asset_id === 'USDT' || data[i].asset_id === 'XRP' || data[i].asset_id === 'BCH') {\n      dataAssets5.push(data[i]);\n    }\n  }\n\n  dataAssets5.sort((a, b) => a.asset_id > b.asset_id ? 1 : -1);\n  return dataAssets5;\n});\nexport const fetchLogoCurrency = createAsyncThunk('home/fetchLogoCurrency', async () => {\n  //recuperer toutes les logo des crypto\n  const request = await fetch('https://rest.coinapi.io/v1/assets/icons/{12px}', {\n    method: 'GET',\n    headers: {\n      'X-CoinAPI-Key': 'F9065291-99B7-44B7-9F3C-4C02D0131B28'\n    }\n  });\n  const data = await request.json();\n\n  for (var i = 0; i < data.length; i++) {\n    if (data[i].asset_id === 'BTC' || data[i].asset_id === 'ETH' || data[i].asset_id === 'USDT' || data[i].asset_id === 'XRP' || data[i].asset_id === 'BCH') {\n      dataAssetsLogo5.push(data[i]);\n    }\n  }\n\n  dataAssetsLogo5.sort((a, b) => a.asset_id > b.asset_id ? 1 : -1);\n  return dataAssetsLogo5;\n});\nexport const currencySlice = createSlice({\n  name: 'currency',\n  initialState: {\n    state: 'loading',\n    error: null,\n    currency: []\n  },\n  reducers: {\n    hydrateCurrency: (state, action) => {\n      state.currency = action.payload;\n    }\n  },\n  extraReducers: {\n    [fetchInfoCurrency.pending]: (state, action) => {\n      if (state.state !== 'loading') {\n        state.state = 'loading';\n      }\n    },\n    [fetchInfoCurrency.fulfilled]: (state, action) => {\n      if (state.state === 'loading') {\n        state.state = 'ready';\n        state.currency = action.payload;\n      }\n    },\n    [fetchInfoCurrency.rejected]: (state, action) => {\n      if (state.state === 'loading') {\n        state.state = 'error';\n        state.error = action.error.message;\n      }\n    }\n  }\n});\nexport const getHomeCurrency = state => state.currency.currency;\nexport const {\n  hydrateCurrency\n} = currencySlice.actions;\nexport default currencySlice.reducer;","map":{"version":3,"sources":["C:/Users/Dylan/Desktop/SAE/2eme/nodejs/cryptocheck/client/src/pages/currencySlice.js"],"names":["createSlice","createAsyncThunk","dataAssets5","fetchInfoCurrency","request","fetch","method","headers","data","json","i","length","asset_id","push","sort","a","b","fetchLogoCurrency","dataAssetsLogo5","currencySlice","name","initialState","state","error","currency","reducers","hydrateCurrency","action","payload","extraReducers","pending","fulfilled","rejected","message","getHomeCurrency","actions","reducer"],"mappings":"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","sourcesContent":["import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\r\nvar dataAssets5 = [];\r\n\r\n\r\nexport const fetchInfoCurrency = createAsyncThunk(\r\n\t'home/fetchInfoCurrency',\r\n\tasync () => {\r\n//recuperer toutes les info des crypto\r\n\t\tconst request = await fetch('https://rest.coinapi.io/v1/assets', {\r\n\t\t\tmethod: 'GET',\r\n\t\t\theaders: {'X-CoinAPI-Key': 'F9065291-99B7-44B7-9F3C-4C02D0131B28'}\r\n\t\t});\r\n\r\n\t\tconst data = await request.json();\r\n\t\tfor (var i = 0; i < data.length; i++) {\r\n\t\t\tif ((data[i].asset_id === 'BTC') || (data[i].asset_id === 'ETH') || (data[i].asset_id === 'USDT') || (data[i].asset_id === 'XRP') || (data[i].asset_id === 'BCH')) {\r\n\t\t\t\tdataAssets5.push(data[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tdataAssets5.sort((a, b) => (a.asset_id > b.asset_id) ? 1 : -1);\r\n\t\treturn dataAssets5;\r\n\t}\r\n);\r\n\r\nexport const fetchLogoCurrency = createAsyncThunk(\r\n\t'home/fetchLogoCurrency',\r\n\tasync () => {\r\n//recuperer toutes les logo des crypto\r\n\t\tconst request = await fetch('https://rest.coinapi.io/v1/assets/icons/{12px}', {\r\n\t\t\tmethod: 'GET',\r\n\t\t\theaders: {'X-CoinAPI-Key': 'F9065291-99B7-44B7-9F3C-4C02D0131B28'}\r\n\t\t});\r\n\r\n\t\tconst data = await request.json();\r\n\t\tfor (var i = 0; i < data.length; i++) {\r\n\t\t\tif ((data[i].asset_id === 'BTC') || (data[i].asset_id === 'ETH') || (data[i].asset_id === 'USDT') || (data[i].asset_id === 'XRP') || (data[i].asset_id === 'BCH')) {\r\n\t\t\t\tdataAssetsLogo5.push(data[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tdataAssetsLogo5.sort((a, b) => (a.asset_id > b.asset_id) ? 1 : -1);\r\n\t\treturn dataAssetsLogo5;\r\n\t}\r\n);\r\nexport const currencySlice = createSlice({\r\n\tname: 'currency',\r\n\tinitialState: {\r\n\t\tstate: 'loading',\r\n\t\terror: null,\r\n\t\tcurrency: []\r\n\t},\r\n\treducers: {\r\n\t\thydrateCurrency: (state, action) => {\r\n\t\t\tstate.currency = action.payload\r\n\t\t},\r\n\t},\r\n\textraReducers: {\r\n\t\t[fetchInfoCurrency.pending]: (state, action) => {\r\n\t\t\tif (state.state !== 'loading') {\r\n\t\t\t\tstate.state = 'loading';\r\n\t\t\t}\r\n\t\t},\r\n\t\t[fetchInfoCurrency.fulfilled]: (state, action) => {\r\n\t\t\tif (state.state === 'loading') {\r\n\t\t\t\tstate.state = 'ready';\r\n\t\t\t\tstate.currency = action.payload;\r\n\t\t\t}\r\n\t\t},\r\n\t\t[fetchInfoCurrency.rejected]: (state, action) => {\r\n\t\t\tif (state.state === 'loading') {\r\n\t\t\t\tstate.state = 'error';\r\n\t\t\t\tstate.error = action.error.message;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n});\r\n\r\n\r\nexport const getHomeCurrency = state => state.currency.currency;\r\n\r\nexport const {hydrateCurrency} = currencySlice.actions;\r\n\r\nexport default currencySlice.reducer;\r\n\r\n"]},"metadata":{},"sourceType":"module"}