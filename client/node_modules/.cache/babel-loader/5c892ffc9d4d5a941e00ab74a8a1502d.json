{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dylan\\\\Desktop\\\\SAE\\\\2eme\\\\nodejs\\\\cryptocheck\\\\client\\\\src\\\\components\\\\GraphicCrypto.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { List, Avatar } from 'antd';\nvar pasEgal = 0;\n\nconst GraphicCrypto = () => {\n  const [data, setData] = useState([]);\n  const dataTmp = [...data];\n  useEffect(() => {\n    const ws = new WebSocket(\"wss://ws-sandbox.coinapi.io/v1/\");\n\n    ws.onopen = function (event) {\n      ws.send(JSON.stringify({\n        type: \"hello\",\n        apikey: \"F9065291-99B7-44B7-9F3C-4C02D0131B28\",\n        \"heartbeat\": false,\n        \"subscribe_data_type\": [\"trade\", \"quote\", \"book20\"],\n        \"subscribe_filter_asset_id\": [\"BTC\"]\n      }));\n\n      ws.onmessage = message => {\n        const dataFromServer = JSON.parse(message.data);\n\n        if (dataTmp.length === 0) {\n          dataTmp.push(dataFromServer);\n        } else {\n          pasEgal = 0;\n\n          for (var i = 0; i < dataTmp.length; i++) {\n            if (dataTmp[i].symbol_id === dataFromServer.symbol_id) {\n              dataTmp.splice(i, 1, dataFromServer);\n              break;\n            } else {\n              pasEgal++;\n            }\n\n            if (pasEgal === dataTmp.length) {\n              dataTmp.push(dataFromServer);\n            }\n          }\n        }\n\n        setData(dataTmp);\n      };\n    };\n  }, []);\n  console.log(data);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(List, {\n    itemLayout: \"horizontal\",\n    dataSource: data,\n    renderItem: item => React.createElement(List.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(List.Item.Meta, {\n      avatar: React.createElement(Avatar, {\n        src: item.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }),\n      title: React.createElement(Link, {\n        to: '/Currency/' + item.asset_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, item.name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), \",\");\n};\n\nexport default GraphicCrypto;","map":{"version":3,"sources":["C:/Users/Dylan/Desktop/SAE/2eme/nodejs/cryptocheck/client/src/components/GraphicCrypto.js"],"names":["React","useEffect","useState","Link","List","Avatar","pasEgal","GraphicCrypto","data","setData","dataTmp","ws","WebSocket","onopen","event","send","JSON","stringify","type","apikey","onmessage","message","dataFromServer","parse","length","push","i","symbol_id","splice","console","log","item","url","asset_id","name"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,IAAR,EAAcC,MAAd,QAA2B,MAA3B;AACA,IAAIC,OAAO,GAAG,CAAd;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC3B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMQ,OAAO,GAAG,CAAC,GAAGF,IAAJ,CAAhB;AACAP,EAAAA,SAAS,CAAC,MAAM;AAEf,UAAMU,EAAE,GAAG,IAAIC,SAAJ,CAAc,iCAAd,CAAX;;AACAD,IAAAA,EAAE,CAACE,MAAH,GAAY,UAAUC,KAAV,EAAiB;AAC5BH,MAAAA,EAAE,CAACI,IAAH,CACCC,IAAI,CAACC,SAAL,CAAe;AAEdC,QAAAA,IAAI,EAAE,OAFQ;AAGdC,QAAAA,MAAM,EAAE,sCAHM;AAId,qBAAa,KAJC;AAKd,+BAAuB,CAAC,OAAD,EAAU,OAAV,EAAmB,QAAnB,CALT;AAMd,qCAA6B,CAAC,KAAD;AANf,OAAf,CADD;;AAWAR,MAAAA,EAAE,CAACS,SAAH,GAAgBC,OAAD,IAAa;AAC3B,cAAMC,cAAc,GAAGN,IAAI,CAACO,KAAL,CAAWF,OAAO,CAACb,IAAnB,CAAvB;;AAGA,YAAIE,OAAO,CAACc,MAAR,KAAmB,CAAvB,EAA0B;AACzBd,UAAAA,OAAO,CAACe,IAAR,CAAaH,cAAb;AACA,SAFD,MAEO;AACNhB,UAAAA,OAAO,GAAG,CAAV;;AACA,eAAK,IAAIoB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhB,OAAO,CAACc,MAA5B,EAAoCE,CAAC,EAArC,EAAyC;AACxC,gBAAIhB,OAAO,CAACgB,CAAD,CAAP,CAAWC,SAAX,KAAyBL,cAAc,CAACK,SAA5C,EAAuD;AACtDjB,cAAAA,OAAO,CAACkB,MAAR,CAAeF,CAAf,EAAkB,CAAlB,EAAqBJ,cAArB;AACA;AAEA,aAJD,MAIO;AACNhB,cAAAA,OAAO;AACP;;AAED,gBAAIA,OAAO,KAAKI,OAAO,CAACc,MAAxB,EAAgC;AAC/Bd,cAAAA,OAAO,CAACe,IAAR,CAAaH,cAAb;AAEA;AAGD;AAED;;AAEDb,QAAAA,OAAO,CAACC,OAAD,CAAP;AACA,OA5BD;AA+BA,KA3CD;AA6CA,GAhDQ,EAgDN,EAhDM,CAAT;AAiDAmB,EAAAA,OAAO,CAACC,GAAR,CAAYtB,IAAZ;AACA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEC,oBAAC,IAAD;AACC,IAAA,UAAU,EAAC,YADZ;AAEC,IAAA,UAAU,EAAEA,IAFb;AAGC,IAAA,UAAU,EAAEuB,IAAI,IAEf,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,IAAD,CAAM,IAAN,CAAW,IAAX;AACC,MAAA,MAAM,EAAE,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAEA,IAAI,CAACC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADT;AAEC,MAAA,KAAK,EAAE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAE,eAAeD,IAAI,CAACE,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyCF,IAAI,CAACG,IAA9C,CAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,MADD;AAoBA,CAzED;;AA2EA,eAAe3B,aAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {List, Avatar} from 'antd';\r\nvar pasEgal = 0;\r\n\r\nconst GraphicCrypto = () => {\r\n\tconst [data, setData] = useState([]);\r\n\tconst dataTmp = [...data];\r\n\tuseEffect(() => {\r\n\r\n\t\tconst ws = new WebSocket(\"wss://ws-sandbox.coinapi.io/v1/\");\r\n\t\tws.onopen = function (event) {\r\n\t\t\tws.send(\r\n\t\t\t\tJSON.stringify({\r\n\r\n\t\t\t\t\ttype: \"hello\",\r\n\t\t\t\t\tapikey: \"F9065291-99B7-44B7-9F3C-4C02D0131B28\",\r\n\t\t\t\t\t\"heartbeat\": false,\r\n\t\t\t\t\t\"subscribe_data_type\": [\"trade\", \"quote\", \"book20\"],\r\n\t\t\t\t\t\"subscribe_filter_asset_id\": [\"BTC\"]\r\n\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tws.onmessage = (message) => {\r\n\t\t\t\tconst dataFromServer = JSON.parse(message.data);\r\n\r\n\r\n\t\t\t\tif (dataTmp.length === 0) {\r\n\t\t\t\t\tdataTmp.push(dataFromServer);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpasEgal = 0;\r\n\t\t\t\t\tfor (var i = 0; i < dataTmp.length; i++) {\r\n\t\t\t\t\t\tif (dataTmp[i].symbol_id === dataFromServer.symbol_id) {\r\n\t\t\t\t\t\t\tdataTmp.splice(i, 1, dataFromServer);\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpasEgal++;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (pasEgal === dataTmp.length) {\r\n\t\t\t\t\t\t\tdataTmp.push(dataFromServer);\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetData(dataTmp);\r\n\t\t\t};\r\n\r\n\r\n\t\t};\r\n\r\n\t}, []);\r\n\tconsole.log(data);\r\n\treturn (\r\n\t\t<div>\r\n\r\n\t\t\t<List\r\n\t\t\t\titemLayout=\"horizontal\"\r\n\t\t\t\tdataSource={data}\r\n\t\t\t\trenderItem={item => (\r\n\r\n\t\t\t\t\t<List.Item>\r\n\t\t\t\t\t\t<List.Item.Meta\r\n\t\t\t\t\t\t\tavatar={<Avatar src={item.url}/>}\r\n\t\t\t\t\t\t\ttitle={<Link to={'/Currency/' + item.asset_id}>{item.name}</Link>}\r\n\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t</List.Item>\r\n\t\t\t\t)}\r\n\t\t\t/>,\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default GraphicCrypto;"]},"metadata":{},"sourceType":"module"}