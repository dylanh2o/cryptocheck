{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nvar dataAssetsInfo5 = [];\nvar dataAssetsLogo5 = [];\nvar dataAssets5 = []; //fonction pour fusionner deux tableaux d'objets avec une clé similaire\n\nfunction mergeArrayObjects(arr1, arr2) {\n  return arr1.map((item, i) => {\n    if (item.id === arr2[i].id) {\n      //fusionne deux objets\n      return Object.assign({}, item, arr2[i]);\n    }\n  });\n}\n\nexport const fetchInfoCurrency = createAsyncThunk('cryptocurrencies/fetchInfoCurrency', async () => {\n  //recuperer toutes les info des crypto\n  const request = await fetch('https://rest.coinapi.io/v1/assets', {\n    method: 'GET',\n    headers: {\n      'X-CoinAPI-Key': 'F9065291-99B7-44B7-9F3C-4C02D0131B28'\n    }\n  });\n  const data = await request.json();\n\n  for (var i = 0; i < data.length; i++) {\n    if (data[i].asset_id === 'BTC' || data[i].asset_id === 'ETH' || data[i].asset_id === 'USDT' || data[i].asset_id === 'XRP' || data[i].asset_id === 'BCH') {\n      dataAssetsInfo5.push(data[i]);\n    }\n  }\n\n  dataAssetsInfo5.sort((a, b) => a.asset_id > b.asset_id ? 1 : -1);\n  return dataAssetsInfo5;\n});\nexport const fetchLogoCurrency = createAsyncThunk('cryptocurrencies/fetchLogoCurrency', async () => {\n  dataAssetsLogo5 = []; //recuperer toutes les logo des crypto\n\n  const request = await fetch('https://rest.coinapi.io/v1/assets/icons/{12px}', {\n    method: 'GET',\n    headers: {\n      'X-CoinAPI-Key': 'F9065291-99B7-44B7-9F3C-4C02D0131B28'\n    }\n  });\n  const data = await request.json();\n\n  for (var i = 0; i < data.length; i++) {\n    if (data[i].asset_id === 'BTC' || data[i].asset_id === 'ETH' || data[i].asset_id === 'USDT' || data[i].asset_id === 'XRP' || data[i].asset_id === 'BCH') {\n      dataAssetsLogo5.push(data[i]);\n    }\n  }\n\n  dataAssetsLogo5.sort((a, b) => a.asset_id > b.asset_id ? 1 : -1);\n  dataAssets5 = mergeArrayObjects(dataAssetsInfo5, dataAssetsLogo5);\n  dataAssets5.sort((a, b) => a.name > b.name ? 1 : -1);\n  return dataAssets5;\n});\nexport const currencySlice = createSlice({\n  name: 'currency',\n  initialState: {\n    state: 'loading',\n    error: null,\n    currency: []\n  },\n  reducers: {},\n  extraReducers: {\n    [fetchInfoCurrency.pending]: (state, action) => {\n      if (state.state !== 'loading') {\n        state.state = 'loading';\n      }\n    },\n    [fetchInfoCurrency.fulfilled]: (state, action) => {\n      if (state.state === 'loading') {\n        state.state = 'ready';\n        state.currency = action.payload;\n      }\n    },\n    [fetchInfoCurrency.rejected]: (state, action) => {\n      if (state.state === 'loading') {\n        state.state = 'error';\n        state.error = action.error.message;\n      }\n    },\n    [fetchLogoCurrency.pending]: (state, action) => {\n      if (state.state !== 'loading') {\n        state.state = 'loading';\n      }\n    },\n    [fetchLogoCurrency.fulfilled]: (state, action) => {\n      if (state.state === 'loading') {\n        state.state = 'ready';\n        state.currency = action.payload;\n      }\n    },\n    [fetchLogoCurrency.rejected]: (state, action) => {\n      if (state.state === 'loading') {\n        state.state = 'error';\n        state.error = action.error.message;\n      }\n    }\n  }\n});\nexport const getCryptocurrenciesCurrencys = state => state.currency.currency;\nexport default currencySlice.reducer;","map":{"version":3,"sources":["C:/Users/Dylan/Desktop/SAE/2eme/nodejs/cryptocheck/client/src/pages/currencySlice.js"],"names":["createSlice","createAsyncThunk","dataAssetsInfo5","dataAssetsLogo5","dataAssets5","mergeArrayObjects","arr1","arr2","map","item","i","id","Object","assign","fetchInfoCurrency","request","fetch","method","headers","data","json","length","asset_id","push","sort","a","b","fetchLogoCurrency","name","currencySlice","initialState","state","error","currency","reducers","extraReducers","pending","action","fulfilled","payload","rejected","message","getCryptocurrenciesCurrencys","reducer"],"mappings":"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","sourcesContent":["import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\r\n\r\nvar dataAssetsInfo5 = [];\r\nvar dataAssetsLogo5 = [];\r\nvar dataAssets5 = [];\r\n\r\n//fonction pour fusionner deux tableaux d'objets avec une clé similaire\r\nfunction mergeArrayObjects(arr1, arr2) {\r\n\treturn arr1.map((item, i) => {\r\n\t\tif (item.id === arr2[i].id) {\r\n\t\t\t//fusionne deux objets\r\n\t\t\treturn Object.assign({}, item, arr2[i])\r\n\t\t}\r\n\t})\r\n}\r\n\r\nexport const fetchInfoCurrency = createAsyncThunk(\r\n\t'cryptocurrencies/fetchInfoCurrency',\r\n\tasync () => {\r\n\t\t\r\n//recuperer toutes les info des crypto\r\n\t\tconst request = await fetch('https://rest.coinapi.io/v1/assets', {\r\n\t\t\tmethod: 'GET',\r\n\t\t\theaders: {'X-CoinAPI-Key': 'F9065291-99B7-44B7-9F3C-4C02D0131B28'}\r\n\t\t});\r\n\r\n\t\tconst data = await request.json();\r\n\t\tfor (var i = 0; i < data.length; i++) {\r\n\t\t\tif ((data[i].asset_id === 'BTC') || (data[i].asset_id === 'ETH') || (data[i].asset_id === 'USDT') || (data[i].asset_id === 'XRP') || (data[i].asset_id === 'BCH')) {\r\n\t\t\t\tdataAssetsInfo5.push(data[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tdataAssetsInfo5.sort((a, b) => (a.asset_id > b.asset_id) ? 1 : -1);\r\n\t\treturn dataAssetsInfo5;\r\n\t}\r\n);\r\n\r\nexport const fetchLogoCurrency = createAsyncThunk(\r\n\t'cryptocurrencies/fetchLogoCurrency',\r\n\tasync () => {\r\n\t\tdataAssetsLogo5 = [];\r\n//recuperer toutes les logo des crypto\r\n\t\tconst request = await fetch('https://rest.coinapi.io/v1/assets/icons/{12px}', {\r\n\t\t\tmethod: 'GET',\r\n\t\t\theaders: {'X-CoinAPI-Key': 'F9065291-99B7-44B7-9F3C-4C02D0131B28'}\r\n\t\t});\r\n\r\n\t\tconst data = await request.json();\r\n\t\tfor (var i = 0; i < data.length; i++) {\r\n\t\t\tif ((data[i].asset_id === 'BTC') || (data[i].asset_id === 'ETH') || (data[i].asset_id === 'USDT') || (data[i].asset_id === 'XRP') || (data[i].asset_id === 'BCH')) {\r\n\t\t\t\tdataAssetsLogo5.push(data[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdataAssetsLogo5.sort((a, b) => (a.asset_id > b.asset_id) ? 1 : -1);\r\n\t\tdataAssets5 = (mergeArrayObjects(dataAssetsInfo5, dataAssetsLogo5));\r\n\t\tdataAssets5.sort((a, b) => (a.name > b.name) ? 1 : -1);\r\n\t\treturn dataAssets5;\r\n\t}\r\n);\r\nexport const currencySlice = createSlice({\r\n\tname: 'currency',\r\n\tinitialState: {\r\n\t\tstate: 'loading',\r\n\t\terror: null,\r\n\t\tcurrency: []\r\n\t},\r\n\treducers: {\r\n\r\n\t},\r\n\textraReducers: {\r\n\t\t[fetchInfoCurrency.pending]: (state, action) => {\r\n\t\t\tif (state.state !== 'loading') {\r\n\t\t\t\tstate.state = 'loading';\r\n\t\t\t}\r\n\t\t},\r\n\t\t[fetchInfoCurrency.fulfilled]: (state, action) => {\r\n\t\t\tif (state.state === 'loading') {\r\n\t\t\t\tstate.state = 'ready';\r\n\t\t\t\tstate.currency = action.payload;\r\n\t\t\t}\r\n\t\t},\r\n\t\t[fetchInfoCurrency.rejected]: (state, action) => {\r\n\t\t\tif (state.state === 'loading') {\r\n\t\t\t\tstate.state = 'error';\r\n\t\t\t\tstate.error = action.error.message;\r\n\r\n\t\t\t}\r\n\t\t}, [fetchLogoCurrency.pending]: (state, action) => {\r\n\t\t\tif (state.state !== 'loading') {\r\n\t\t\t\tstate.state = 'loading';\r\n\t\t\t}\r\n\t\t},\r\n\t\t[fetchLogoCurrency.fulfilled]: (state, action) => {\r\n\t\t\tif (state.state === 'loading') {\r\n\t\t\t\tstate.state = 'ready';\r\n\t\t\t\tstate.currency = action.payload;\r\n\t\t\t}\r\n\t\t},\r\n\t\t[fetchLogoCurrency.rejected]: (state, action) => {\r\n\t\t\tif (state.state === 'loading') {\r\n\t\t\t\tstate.state = 'error';\r\n\t\t\t\tstate.error = action.error.message;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n});\r\n\r\n\r\nexport const getCryptocurrenciesCurrencys = state => state.currency.currency;\r\n\r\n\r\n\r\nexport default currencySlice.reducer;\r\n\r\n"]},"metadata":{},"sourceType":"module"}