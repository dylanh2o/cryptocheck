{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'; //const dataAssetsTmp = [];\n//const dataAssetsLogoTmp = [];\n\nconst dataAssets5Tmp = [];\nconst dataAssetsLogo5Tmp = [];\nvar dataAssets5 = [];\n\nconst https = require('https');\n\nexport const fetchBlogArticles = createAsyncThunk('home/fetchArticles', async () => {\n  //recuperer toutes les info crypto\n  var optionsAssets = {\n    \"method\": \"GET\",\n    \"hostname\": \"rest.coinapi.io\",\n    \"path\": \"/v1/assets\",\n    \"headers\": {\n      'X-CoinAPI-Key': 'F9065291-99B7-44B7-9F3C-4C02D0131B28'\n    }\n  };\n  var requestAssets = https.request(optionsAssets, function (response) {\n    var chunks = [];\n    response.on(\"data\", function (chunk) {\n      chunks.push(chunk);\n    });\n    let urlAssets = response._fetchResponse.url;\n    fetch(urlAssets).then(res => res.json()).then(out => {\n      for (var i = 0; i < out.length; i++) {\n        if (out[i].asset_id === 'BTC' || out[i].asset_id === 'ETH' || out[i].asset_id === 'USDT' || out[i].asset_id === 'XRP' || out[i].asset_id === 'BCH') {\n          dataAssets5Tmp.push(out[i]);\n        } //dataAssetsTmp.push(out[i]);\n\n\n        return dataAssets5Tmp;\n      }\n    }).catch(err => {\n      throw err;\n    });\n  });\n  requestAssets.end();\n});\nexport const currencySlice = createSlice({\n  name: 'currency',\n  initialState: {\n    state: 'loading',\n    error: null,\n    currency: []\n  },\n  reducers: {\n    hydrateCurrency: (state, action) => {\n      state.currency = action.payload;\n    }\n  },\n  extraReducers: {\n    [fetchBlogArticles.pending]: (state, action) => {\n      if (state.state !== 'loading') {\n        state.state = 'loading';\n      }\n    },\n    [fetchBlogArticles.fulfilled]: (state, action) => {\n      if (state.state === 'loading') {\n        state.state = 'ready';\n        state.articles = action.payload.docs;\n      }\n    }\n  }\n});\nexport const getHomeCurrency = state => state.currency.currency;\nexport const {\n  hydrateCurrency\n} = currencySlice.actions;\nexport default currencySlice.reducer;","map":{"version":3,"sources":["C:/Users/Dylan/Desktop/SAE/2eme/nodejs/cryptocheck/client/src/pages/currencySlice.js"],"names":["createSlice","createAsyncThunk","dataAssets5Tmp","dataAssetsLogo5Tmp","dataAssets5","https","require","fetchBlogArticles","optionsAssets","requestAssets","request","response","chunks","on","chunk","push","urlAssets","_fetchResponse","url","fetch","then","res","json","out","i","length","asset_id","catch","err","end","currencySlice","name","initialState","state","error","currency","reducers","hydrateCurrency","action","payload","extraReducers","pending","fulfilled","articles","docs","getHomeCurrency","actions","reducer"],"mappings":"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","sourcesContent":["import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\r\n//const dataAssetsTmp = [];\r\n//const dataAssetsLogoTmp = [];\r\nconst dataAssets5Tmp = [];\r\nconst dataAssetsLogo5Tmp = [];\r\nvar dataAssets5 = [];\r\nconst https = require('https');\r\nexport const fetchBlogArticles = createAsyncThunk(\r\n\t'home/fetchArticles',\r\n\tasync () => {\r\n\r\n//recuperer toutes les info crypto\r\n\t\tvar optionsAssets = {\r\n\t\t\t\"method\": \"GET\",\r\n\t\t\t\"hostname\": \"rest.coinapi.io\",\r\n\t\t\t\"path\": \"/v1/assets\",\r\n\t\t\t\"headers\": {'X-CoinAPI-Key': 'F9065291-99B7-44B7-9F3C-4C02D0131B28'}\r\n\t\t};\r\n\r\n\t\tvar requestAssets = https.request(optionsAssets, function (response) {\r\n\t\t\tvar chunks = [];\r\n\t\t\tresponse.on(\"data\", function (chunk) {\r\n\t\t\t\tchunks.push(chunk);\r\n\t\t\t});\r\n\t\t\tlet urlAssets = response._fetchResponse.url;\r\n\t\t\tfetch(urlAssets)\r\n\t\t\t\t.then(res => res.json())\r\n\t\t\t\t.then((out) => {\r\n\t\t\t\t\tfor (var i = 0; i < out.length; i++) {\r\n\t\t\t\t\t\tif ((out[i].asset_id === 'BTC') || (out[i].asset_id === 'ETH') || (out[i].asset_id === 'USDT') || (out[i].asset_id === 'XRP') || (out[i].asset_id === 'BCH')) {\r\n\t\t\t\t\t\t\tdataAssets5Tmp.push(out[i]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//dataAssetsTmp.push(out[i]);\r\n\t\t\t\t\t\treturn dataAssets5Tmp ;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err => {\r\n\t\t\t\t\tthrow err\r\n\t\t\t\t});\r\n\t\t});\r\n\r\n\t\trequestAssets.end();\r\n\t}\r\n);\r\n\r\nexport const currencySlice = createSlice({\r\n\tname: 'currency',\r\n\tinitialState: {\r\n\t\tstate: 'loading',\r\n\t\terror: null,\r\n\t\tcurrency: []\r\n\t},\r\n\treducers: {\r\n\t\thydrateCurrency: (state, action) => {\r\n\t\t\tstate.currency = action.payload\r\n\t\t},\r\n\t},\r\n\textraReducers: {\r\n\t\t[fetchBlogArticles.pending]: (state, action) => {\r\n\t\t\tif (state.state !== 'loading') {\r\n\t\t\t\tstate.state = 'loading';\r\n\t\t\t}\r\n\t\t},\r\n\t\t[fetchBlogArticles.fulfilled]: (state, action) => {\r\n\t\t\tif (state.state === 'loading') {\r\n\t\t\t\tstate.state = 'ready';\r\n\t\t\t\tstate.articles = action.payload.docs;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t}\r\n});\r\n\r\n\r\nexport const getHomeCurrency = state => state.currency.currency;\r\n\r\nexport const {hydrateCurrency} = currencySlice.actions;\r\n\r\nexport default currencySlice.reducer;\r\n\r\n"]},"metadata":{},"sourceType":"module"}