{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dylan\\\\Desktop\\\\SAE\\\\2eme\\\\nodejs\\\\cryptocheck\\\\client\\\\src\\\\components\\\\GraphicCrypto.js\";\nimport React, { useEffect, useState } from 'react';\nimport { List } from 'antd';\nimport { Chart, Legend, Axis, Tooltip, Geom } from \"bizcharts\";\nvar currency = 'BTC';\nconst currencyWS = 'GEMINI_SPOT_' + currency + '_USD';\n\nconst GraphicCrypto = () => {\n  const [data, setData] = useState([]);\n  const dataTmp = [...data];\n  useEffect(() => {\n    const ws = new WebSocket(\"wss://ws-sandbox.coinapi.io/v1/\");\n\n    ws.onopen = function (event) {\n      ws.send(JSON.stringify({\n        type: \"hello\",\n        apikey: \"F9065291-99B7-44B7-9F3C-4C02D0131B28\",\n        \"heartbeat\": false,\n        \"subscribe_data_type\": [\"quote\"],\n        \"subscribe_filter_asset_id\": [currency]\n      }));\n\n      ws.onmessage = message => {\n        const dataFromServer = JSON.parse(message.data);\n\n        if (dataFromServer.symbol_id === currencyWS) {\n          if (dataTmp.length === 0) {\n            dataTmp.push(dataFromServer);\n          } else {\n            dataTmp.splice(0, 1, dataFromServer);\n          }\n\n          setData(dataTmp);\n        }\n      };\n    };\n  }, []);\n  const data2 = [{\n    genre: 10000,\n    sold: 1000\n  }, {\n    genre: 9000,\n    sold: 200\n  }, {\n    genre: 7000,\n    sold: 300\n  }, {\n    genre: 8000,\n    sold: 2000\n  }];\n  const cols = {\n    sold: {\n      alias: 'USDT'\n    },\n    genre: {\n      alias: 'BTC'\n    }\n  };\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Chart, {\n    width: 600,\n    height: 400,\n    data: data2,\n    scale: cols,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Axis, {\n    name: \"genre\",\n    title: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(Axis, {\n    name: \"sold\",\n    title: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(Legend, {\n    position: \"top\",\n    dy: -20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(Tooltip, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(Geom, {\n    type: \"line\",\n    position: \"genre*sold\",\n    color: \"genre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), React.createElement(List, {\n    itemLayout: \"horizontal\",\n    dataSource: data,\n    renderItem: item => React.createElement(List.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(List.Item.Meta, {\n      title: React.createElement(React.Fragment, null, Math.round(item.ask_price), \" usd - \", Math.round(item.ask_price / 1.06751), \" CHF\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), \",\");\n};\n\nexport default GraphicCrypto;","map":{"version":3,"sources":["C:/Users/Dylan/Desktop/SAE/2eme/nodejs/cryptocheck/client/src/components/GraphicCrypto.js"],"names":["React","useEffect","useState","List","Chart","Legend","Axis","Tooltip","Geom","currency","currencyWS","GraphicCrypto","data","setData","dataTmp","ws","WebSocket","onopen","event","send","JSON","stringify","type","apikey","onmessage","message","dataFromServer","parse","symbol_id","length","push","splice","data2","genre","sold","cols","alias","item","Math","round","ask_price"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,IAAR,QAAmB,MAAnB;AACA,SAAQC,KAAR,EAAeC,MAAf,EAAuBC,IAAvB,EAA6BC,OAA7B,EAAsCC,IAAtC,QAAiD,WAAjD;AAEA,IAAIC,QAAQ,GAAG,KAAf;AACA,MAAMC,UAAU,GAAG,iBAAeD,QAAf,GAAwB,MAA3C;;AACA,MAAME,aAAa,GAAG,MAAM;AAC3B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMY,OAAO,GAAG,CAAC,GAAGF,IAAJ,CAAhB;AACAX,EAAAA,SAAS,CAAC,MAAM;AAEf,UAAMc,EAAE,GAAG,IAAIC,SAAJ,CAAc,iCAAd,CAAX;;AACAD,IAAAA,EAAE,CAACE,MAAH,GAAY,UAAUC,KAAV,EAAiB;AAC5BH,MAAAA,EAAE,CAACI,IAAH,CACCC,IAAI,CAACC,SAAL,CAAe;AAEdC,QAAAA,IAAI,EAAE,OAFQ;AAGdC,QAAAA,MAAM,EAAE,sCAHM;AAId,qBAAa,KAJC;AAKd,+BAAuB,CAAC,OAAD,CALT;AAMd,qCAA6B,CAACd,QAAD;AANf,OAAf,CADD;;AAWAM,MAAAA,EAAE,CAACS,SAAH,GAAgBC,OAAD,IAAa;AAC3B,cAAMC,cAAc,GAAGN,IAAI,CAACO,KAAL,CAAWF,OAAO,CAACb,IAAnB,CAAvB;;AACA,YAAIc,cAAc,CAACE,SAAf,KAA6BlB,UAAjC,EAA6C;AAC5C,cAAII,OAAO,CAACe,MAAR,KAAmB,CAAvB,EAA0B;AACzBf,YAAAA,OAAO,CAACgB,IAAR,CAAaJ,cAAb;AACA,WAFD,MAEO;AACNZ,YAAAA,OAAO,CAACiB,MAAR,CAAe,CAAf,EAAkB,CAAlB,EAAqBL,cAArB;AACA;;AACDb,UAAAA,OAAO,CAACC,OAAD,CAAP;AACA;AAED,OAXD;AAcA,KA1BD;AA4BA,GA/BQ,EA+BP,EA/BO,CAAT;AAgCA,QAAMkB,KAAK,GAAG,CACb;AAAEC,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,IAAI,EAAE;AAAtB,GADa,EAEb;AAAED,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,IAAI,EAAE;AAArB,GAFa,EAGb;AAAED,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,IAAI,EAAE;AAArB,GAHa,EAIb;AAAED,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,IAAI,EAAE;AAArB,GAJa,CAAd;AAMA,QAAMC,IAAI,GAAG;AACZD,IAAAA,IAAI,EAAE;AAAEE,MAAAA,KAAK,EAAE;AAAT,KADM;AAEZH,IAAAA,KAAK,EAAE;AAAEG,MAAAA,KAAK,EAAE;AAAT;AAFK,GAAb;AAKA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE,GAAd;AAAmB,IAAA,MAAM,EAAE,GAA3B;AAAgC,IAAA,IAAI,EAAEJ,KAAtC;AAA6C,IAAA,KAAK,EAAEG,IAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAmB,IAAA,KAAK,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,MAAX;AAAkB,IAAA,KAAK,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAGC,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,KAAjB;AAAuB,IAAA,EAAE,EAAE,CAAC,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,EAIC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJD,EAKC,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,MAAX;AAAkB,IAAA,QAAQ,EAAC,YAA3B;AAAwC,IAAA,KAAK,EAAC,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALD,CADD,EAQC,oBAAC,IAAD;AACC,IAAA,UAAU,EAAC,YADZ;AAEC,IAAA,UAAU,EAAEvB,IAFb;AAGC,IAAA,UAAU,EAAEyB,IAAI,IAEf,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,IAAD,CAAM,IAAN,CAAW,IAAX;AAEC,MAAA,KAAK,EAAE,0CACLC,IAAI,CAACC,KAAL,CAAWF,IAAI,CAACG,SAAhB,CADK,aAC8BF,IAAI,CAACC,KAAL,CAAWF,IAAI,CAACG,SAAL,GAAe,OAA1B,CAD9B,SAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARD,MADD;AA4BA,CA1ED;;AA4EA,eAAe7B,aAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {List} from 'antd';\r\nimport {Chart, Legend, Axis, Tooltip, Geom} from \"bizcharts\";\r\n\r\nvar currency = 'BTC';\r\nconst currencyWS = 'GEMINI_SPOT_'+currency+'_USD';\r\nconst GraphicCrypto = () => {\r\n\tconst [data, setData] = useState([]);\r\n\tconst dataTmp = [...data];\r\n\tuseEffect(() => {\r\n\r\n\t\tconst ws = new WebSocket(\"wss://ws-sandbox.coinapi.io/v1/\");\r\n\t\tws.onopen = function (event) {\r\n\t\t\tws.send(\r\n\t\t\t\tJSON.stringify({\r\n\r\n\t\t\t\t\ttype: \"hello\",\r\n\t\t\t\t\tapikey: \"F9065291-99B7-44B7-9F3C-4C02D0131B28\",\r\n\t\t\t\t\t\"heartbeat\": false,\r\n\t\t\t\t\t\"subscribe_data_type\": [\"quote\"],\r\n\t\t\t\t\t\"subscribe_filter_asset_id\": [currency]\r\n\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tws.onmessage = (message) => {\r\n\t\t\t\tconst dataFromServer = JSON.parse(message.data);\r\n\t\t\t\tif (dataFromServer.symbol_id === currencyWS) {\r\n\t\t\t\t\tif (dataTmp.length === 0) {\r\n\t\t\t\t\t\tdataTmp.push(dataFromServer);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdataTmp.splice(0, 1, dataFromServer);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetData(dataTmp);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t};\r\n\r\n\t},[]);\r\n\tconst data2 = [\r\n\t\t{ genre: 10000, sold: 1000},\r\n\t\t{ genre: 9000, sold: 200},\r\n\t\t{ genre: 7000, sold: 300},\r\n\t\t{ genre: 8000, sold: 2000 }\r\n\t];\r\n\tconst cols = {\r\n\t\tsold: { alias: 'USDT' },\r\n\t\tgenre: { alias: 'BTC' }\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Chart width={600} height={400} data={data2} scale={cols}>\r\n\t\t\t\t<Axis name=\"genre\" title/>\r\n\t\t\t\t<Axis name=\"sold\" title/>\r\n\t\t\t\t<Legend position=\"top\" dy={-20} />\r\n\t\t\t\t<Tooltip />\r\n\t\t\t\t<Geom type=\"line\" position=\"genre*sold\" color=\"genre\" />\r\n\t\t\t</Chart>\r\n\t\t\t<List\r\n\t\t\t\titemLayout=\"horizontal\"\r\n\t\t\t\tdataSource={data}\r\n\t\t\t\trenderItem={item => (\r\n\r\n\t\t\t\t\t<List.Item>\r\n\t\t\t\t\t\t<List.Item.Meta\r\n\r\n\t\t\t\t\t\t\ttitle={<>\r\n\t\t\t\t\t\t\t\t{Math.round(item.ask_price)} usd - {Math.round(item.ask_price/1.06751)} CHF\r\n\t\t\t\t\t\t\t</>}\r\n\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t</List.Item>\r\n\t\t\t\t)}\r\n\t\t\t/>,\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default GraphicCrypto;"]},"metadata":{},"sourceType":"module"}